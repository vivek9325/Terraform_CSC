Azure Static Website -------

r1_static-website.tf


module "azure_static_website" {
    source = "./azure_static_website"
    location = "eastus"
    resource_group_name = "myuvk1223"

  # Storage Account
  storage_account_name = "staticwebsite"
  storage_account_tier = "Standard"
  storage_account_replication  = "LRS"
 storage_account_kind = "StorageV2"
  static_web_index_document = "index.html"
  static_web_error_document = "error.html"  
  
}




r1_outputs.tf

output "resource_group_id" {

    description = "Resource Group ID"
    value = module.azure_static_website.resource_group_id
  
}

output "resource_group_name" {

    description = "Resource Group Name"
    value = module.azure_static_website.resource_group_name
  
}

output "resource_group_location" {

    description = "Resource Group Location"
    value = module.azure_static_website.resource_group_location
  
}

output "storage_account_id" {

    description = "Storage Account ID"
    value = module.azure_static_website.storage_account_id
  
}

output "storage_account_name" {

    description = "Storage Account Name"
    value = module.azure_static_website.storage_account_name
  
}



===============================================================================================


Azure CICD Pipeline ----

azure-pipelines-results.yml

trigger:
  paths:
    include:
      - result/*

resources:
- repo: self


pool:
name: '#######'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'build'
        Dockerfile: 'result/Dockerfile'
        tags: '$(tag)'

- stage: Push
  displayName: Push stage
  jobs:
  - job: Push
    displayName: Push
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'push'
        tags: '$(tag)'

