Input Variable - Sensitive Data

vk-variable.tf

variable "business_unit" {

  description = "Business unit Name"
  type        = string
  default     = "HR"

}

variable "environment" {
  description = "Environment"
  type        = string
  default     = "dev"
}

variable "resource_group_name" {
  description = "Resource Group Name"
  type        = string
  default = "myrg"
}

variable "resource_group_location" {
  description = "Resource Group Location"
  type        = string
  default     = "eastus"
  validation {
    condition = var.resource_group_location == "eastus" || var.resource_group_location == "eastus2"
    #condition = can(regex("india$", var.resource_group_location))
    error_message = "We only allow Resources to be in westindia and south india location"
  }
}

variable "mssql-server-name" {

    description="MSSQL Server Information"
    type = string
  
}

variable "mssql-username" {

    description = "Username information"
    type = string
    sensitive = true
  
}

variable "mssql-password" {
  
  description = "password information"
  type=string
  sensitive = true

}

variable "mssql-storage-mb"{
    
    description = "Azure MSSQL Storage size"
    type = number
}

variable "mssql-auto-grow-enable" {

    description = "Azure MSSQL Database Size increase"
    type = bool
  
}


terraform.tfvars

business_unit = "it"
environment = "prod"
resource_group_location = "East US"
mssql-server-name = "mydbvk"
mssql-username = "vivek"
mssql-password = "Ak94@12345678"
mssql-storage-mb = 1024
mssql-auto-grow-enable = true

vk-azure-db.tf

resource "azurerm_mssql_server" "mssql-server" {
  name = "${var.business_unit}-${var.environment}-${var.mssql-server-name}"
  resource_group_name = azurerm_resource_group.vk-rg.name
  location = var.resource_group_location
  version = "12.0"
  administrator_login = var.mssql-username
  administrator_login_password = var.mssql-password
  #ssl_enforcement_enabled = false
  
}


=======================================================================================================

Output.tf

output "resource_group_id" {

    description = "Resource Group ID"
    value = azurerm_resource_group.vk-rg.id
  
}

output "resource_group_name" {

    description = "Resource Group Name"
    value = azurerm_resource_group.vk-rg.name

}

output "virtual_network_name" {

    description = "Virtual Network Name"
    value = azurerm_virtual_network.vknet.name
  
}

=================================================================================================================

Output Variable - Splat


vk-output.tf

output "resource_group_id" {

    description = "Resource Group ID"
    value = azurerm_resource_group.vk-rg.id
  
}

output "resource_group_name" {

    description = "Resource Group Name"
    value = azurerm_resource_group.vk-rg.name

}


output "virtual_network_name" {

    description = "Virtual Network Name"
    value = azurerm_virtual_network.vknet[*].name
  
}

vk-resourcegroup.tf

resource "azurerm_resource_group" "vk-rg" {

  name     = "${var.business_unit}-${var.environment}-${var.resource_group_name}"
  location = var.resource_group_location

}

vk-variable.tf

variable "business_unit" {

  description = "Business unit Name"
  type        = string
  default     = "HR"

}

variable "environment" {
  description = "Environment"
  type        = string
  default     = "dev"
}

variable "resource_group_name" {
  description = "Resource Group Name"
  type        = string
  default = "vkrggg"
}

variable "virtual_network_name" {
  description = "Virtual Network Name"
  type        = string
  default = "vknet"
}

variable "resource_group_location" {
  description = "Resource Group Location"
  type        = string
  default     = "eastus"
}

vk-version.tf

terraform {
  required_version = ">=0.15"
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "4.13.0"
    }
    random = {
      source  = "hashicorp/random"
      version = "3.6.3"
    }
  }
}

provider "azurerm" {
  # Configuration options

  features {

  }
  subscription_id = "bfd8881a-6cc5-4a55-81d7-73350c1acc1f"

}


vk-virtualnetwork.tf

resource "azurerm_virtual_network" "vknet" {

  count = 4
  name                = "${var.business_unit}-${var.environment}-${var.virtual_network_name}-${count.index}"
  location            = azurerm_resource_group.vk-rg.location
  resource_group_name = azurerm_resource_group.vk-rg.name
  address_space       = ["10.0.0.0/16"]

  tags = {
    "owner"     = "vivek"
    environment = "Dev"
  }
}

===================================================================================================
Local Values ---

vk-localvalues.tf
locals {

    rg_name = "${var.business_unit}-${var.environment}-${var.resource_group_name}-vk"
    owner = "vivek"
    server_name = "dev"

    common_tags = {
        Owner = local.owner
        env = local.server_name
    }

}


vk-resourcegroup.tf

resource "azurerm_resource_group" "vk-rg" {

  name     = local.rg_name
  location = var.resource_group_location
  tags = local.common_tags
}

=============================================================================================

Conditional Expression ----

vk-local-values.tf

locals {

    rg_name = "${var.business_unit}-${var.environment}-${var.resource_group_name}-vk"
    owner = "vivek"
    server_name = "dev"

    common_tags = {
        Owner = local.owner
        env = local.server_name
    }

    vnet_address_space = (var.environment != "dev" ? var.vnet_address_space_dev : var.vnet_address_space_all)

}

vk-resource-group.tf

resource "azurerm_resource_group" "vk-rg" {

  name     = local.rg_name
  location = var.resource_group_location
  tags = local.common_tags
}

vk-virtualnetwork.tf

resource "azurerm_virtual_network" "vknet" {

  name                = "vknet"
  location            = azurerm_resource_group.vk-rg.location
  resource_group_name = azurerm_resource_group.vk-rg.name
  address_space       = local.vnet_address_space

  tags = local.common_tags
}

vk-variable.tf

variable "business_unit" {

  description = "Business unit Name"
  type        = string
  default     = "hr"

}

variable "environment" {
  description = "Environment"
  type        = string
  default     = "dev"
}

variable "resource_group_name" {
  description = "Resource Group Name"
  type        = string
  default = "myrg2"
}

variable "resource_group_location" {
  description = "Resource Group Location"
  type        = string
  default     = "eastus"
  /*validation {
    #condition = var.resource_group_location == "eastus" || var.resource_group_location == "eastus2"
    condition = can(regex("india$", var.resource_group_location))
    error_message = "We only allow Resources to be in westindia and south india location"
  }*/
}

variable "mssql-server-name" {

    description="MSSQL Server Information"
    type = string
  
}

variable "mssql-username" {

    description = "Username information"
    type = string
    sensitive = true
  
}

variable "mssql-password" {
  
  description = "password information"
  type=string
  sensitive = true

}

variable "mssql-storage-mb"{
    
    description = "Azure MSSQL Storage size"
    type = number
}

variable "mssql-auto-grow-enable" {

    description = "Azure MSSQL Database Size increase"
    type = bool
  
}

variable "vnet_address_space_dev" {

  description = "Virtual Address for dev"
  type = list(string)
  default = ["10.0.0.0/16"]

}

variable "vnet_address_space_all" {

  description = "Virtual Address Space for All"
  type = list(string)
  default = ["10.1.0.0/16", "10.2.0.0/16", "10.3.0.0/16"]

}


=============================================================================================

Azure Static Website 

terraform.tfvars

location = "eastus"
resource_group_name = "az-vk-rg"
storage_account_name = "azurestaticwebsitevk"
storage_account_tier = "Standard"
storage_account_replication = "LRS"
storage_account_kind = "StorageV2"
static_web_index_document = "index.html"
static_web_error_document = "error.html"




variable.tf

variable "resource_group_name" {

    description = "Name of resource group"
    type = string
  
}

variable "location" {

    description = "Azure Region"
    type = string
  
}

variable "storage_account_name" {

    description = "Storage Account Name"
    type = string
  
}

variable "storage_account_tier" {

    description = "Storage Account Tier"
    type = string
  
}

variable "storage_account_replication" {

    description = "Storage Account Replication"
    type = string
  
}

variable "storage_account_kind" {

    description = "Storage Account Kind"
    type = string
  
}

variable "static_web_index_document" {

    description = "Index file name of static website"
    type = string
  
}

variable "static_web_error_document" {

    description = "Error Document file"
    type = string
  
}




version.tf

terraform {
  required_version=">0.15"
  required_providers {
    azurerm = {
      source = "hashicorp/azurerm"
      version = "4.13.0"
    }
     random = {
      source = "hashicorp/random"
      version = "3.6.3"
    }
  }
}



main.tf

provider "azurerm" {
  # Configuration options
  features{
    
  }

  subscription_id = "bfd8881a-6cc5-4a55-81d7-73350c1acc1f"

}

resource "random_string" "myrandom" {

  length = 6
  numeric = false
  upper = false
  special = false
  
}

resource "azurerm_resource_group" "resource_group" {
  name = var.resource_group_name
  location = var.location
  
}

resource "azurerm_storage_account" "storage_account" {

  name = "${var.storage_account_name}${random_string.myrandom.id}"
  resource_group_name = azurerm_resource_group.resource_group.name
  location = var.location
  account_tier = var.storage_account_tier
  account_replication_type = var.storage_account_replication
  account_kind = var.storage_account_kind

  static_website {

    index_document = var.static_web_index_document
    error_404_document = var.static_web_error_document
    
  }
  
}




outputs.tf

output "resource_group_id" {

    description = "Resource Group ID"
    value = azurerm_resource_group.resource_group.id
  
}

output "resource_group_name" {

    description = "Resource Group Name"
    value = azurerm_resource_group.resource_group.name
  
}

output "resource_group_location" {

    description = "Resource Group Location"
    value = azurerm_resource_group.resource_group.location
  
}

output "storage_account_id" {

    description = "Storage Account ID"
    value = azurerm_storage_account.storage_account.id
  
}

output "storage_account_name" {

    description = "Storage Account Name"
    value = azurerm_storage_account.storage_account.name
  
}
